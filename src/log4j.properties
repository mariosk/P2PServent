# Log4j.properties file
# Default behavior: Do only logging for INFO priority and higher
# Depending on what you do, you can either enable the entire log to be
# of priority DEBUG through the rootLogger OR you can set rootLogger
# to a higher priority and then individually select each logger category
# listed below

# if the master root logger is set to DEBUG,
# it will override the individual module logging priorities
# and allow all messages to be logged.
#log4j.rootCategory=DEBUG, LOGFILE
#log4j.rootCategory=DEBUG, CONSOLE
log4j.rootCategory=DEBUG, CONSOLE

# Set the enterprise logger category to FATAL and its only appender to CONSOLE.
log4j.logger.org.apache.axis=FATAL, CONSOLE

# CONSOLE is set to be a ConsoleAppender using a PatternLayout.
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold=DEBUG
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
# Conversion pattern: Priority [Category] Message
log4j.appender.CONSOLE.layout.ConversionPattern=%-5p [%c] - %m%n
# Conversion pattern: Date Priority [Category] Message
log4j.appender.CONSOLE.layout.ConversionPattern=%d %-5p [%c] - %m%n

# LOGFILE is set to be a File appender using a PatternLayout.
log4j.appender.LOGFILE=org.apache.log4j.FileAppender
log4j.appender.LOGFILE.File=saicontella.log
log4j.appender.LOGFILE.Append=true
log4j.appender.LOGFILE.Threshold=DEBUG
log4j.appender.LOGFILE.layout=org.apache.log4j.PatternLayout
log4j.appender.LOGFILE.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n

#-------------------Gnutella Module--------------------------#
#-- logs all incoming parsed messages under DEBUG
#log4j.logger.gnutella/msg/incoming=DEBUG

#-- log specific incoming message under DEBUG
#log4j.logger.gnutella/msg/incoming/ping=DEBUG
#log4j.logger.gnutella/msg/incoming/pong=DEBUG
#log4j.logger.gnutella/msg/incoming/push=DEBUG
#log4j.logger.gnutella/msg/incoming/query=DEBUG
#log4j.logger.gnutella/msg/incoming/hit=DEBUG
#log4j.logger.gnutella/msg/incoming/unknown=DEBUG

#-- logs all outgoing parsed messages under DEBUG
#log4j.logger.gnutella/msg/outgoing=DEBUG

#-- log specific incoming message under DEBUG
#log4j.logger.gnutella/msg/outgoing/ping=DEBUG
#log4j.logger.gnutella/msg/outgoing/pong=DEBUG
#log4j.logger.gnutella/msg/outgoing/push=DEBUG
#log4j.logger.gnutella/msg/outgoing/query=DEBUG
#log4j.logger.gnutella/msg/outgoing/hit=DEBUG
#log4j.logger.gnutella/msg/outgoing/unknown=DEBUG

#-- Logs basic info under INFO and handshake headers info under DEBUG
#log4j.logger.gnutella/protocol/handshake=DEBUG

#-- Logs packets that will be routed under DEBUG
#log4j.logger.gnutella/router/packet=DEBUG

#-- Logs file transfers for uploads and downloads
#-- Transfer status (starting and finished) are logged under INFO
#-- Transfer remote response headers are logged under DEBUG
#log4j.logger.gnutella/file/download=DEBUG
#log4j.logger.gnutella/file/upload=DEBUG

#------------------Jabber Module---------------------------#
#-- logs all incoming parsed messages under DEBUG
#log4j.logger.jabber/msg/incoming=DEBUG
#-- logs all outgoing parsed messages under DEBUG
#log4j.logger.jabber/msg/outgoing=DEBUG
#-- logs all incoming raw packets under DEBUG
#log4j.logger.jabber/packet/incoming=DEBUG
#-- logs all outgoing raw packets under DEBUG
#log4j.logger.jabber/packet/outgoing=DEBUG
